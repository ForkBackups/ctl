project(ctl CXX)
set( CMAKE_VERBOSE_MAKEFILE  false)
option(USE_CLANG "build application with clang" OFF) # OFF is the default
if( USE_CLANG)
   SET (CMAKE_C_COMPILER             "/usr/bin/clang")
   SET (CMAKE_C_FLAGS                "-Wall -std=c99")
   SET (CMAKE_C_FLAGS_DEBUG          "-g")
   SET (CMAKE_C_FLAGS_MINSIZEREL     "-Os -DNDEBUG")
   SET (CMAKE_C_FLAGS_RELEASE        "-O4 -DNDEBUG")
   SET (CMAKE_C_FLAGS_RELWITHDEBINFO "-O2 -g")

   SET (CMAKE_CXX_COMPILER             "/usr/bin/clang++")
   SET (CMAKE_CXX_FLAGS                "-Wall")
   SET (CMAKE_CXX_FLAGS_DEBUG          "-g")
   SET (CMAKE_CXX_FLAGS_MINSIZEREL     "-Os -DNDEBUG")
   SET (CMAKE_CXX_FLAGS_RELEASE        "-O3 -DNDEBUG")
   SET (CMAKE_CXX_FLAGS_RELWITHDEBINFO "-O2 -g -fno-omit-frame-pointer")
   SET (CMAKE_AR      "/usr/bin/llvm-ar")
   SET (CMAKE_LINKER  "/usr/bin/llvm-link")
   SET (CMAKE_NM      "/usr/bin/llvm-nm")
   SET (CMAKE_OBJDUMP "/usr/bin/llvm-objdump")
   SET (CMAKE_RANLIB  "/usr/bin/llvm-ranlib")
endif( USE_CLANG)
#set (CMAKE_INSTALL_PREFIX /usr/local)
#for installing read:
#http://www.cmake.org/cmake/help/cmake_tutorial.html
set(Boost_USE_MULTITHREADED OFF)
set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "${CMAKE_SOURCE_DIR}/CMakeModules")
find_package(Boost COMPONENTS program_options REQUIRED)
find_package(TBB REQUIRED) 
find_package(METIS REQUIRED) 
if("${CMAKE_MAJOR_VERSION}.${CMAKE_MINOR_VERSION}" VERSION_GREATER 2.8.11)
	get_filename_component(PATH_TO_PROJECT "${CMAKE_SOURCE_DIR}" DIRECTORY)
else()
	get_filename_component(PATH_TO_PROJECT "${CMAKE_SOURCE_DIR}" PATH)
endif()
include_directories(${PATH_TO_PROJECT})
include_directories( ${METIS_INCLUDE_DIR} ${Boost_INCLUDE_DIR} ${TBB_INCLUDE_DIR})
link_directories(/usr/local/lib ${Boost_LIBRARY_DIR} ${METIS_LIBRARY_DIR} ${TBB_LIBRARY_DIR})
add_definitions(" -Wall -ansi -pedantic -std=c++11")
set(CMAKE_BUILD_TYPE RELWITHDEBINFO)
cmake_minimum_required(VERSION 2.6.2)
if("${CMAKE_MAJOR_VERSION}.${CMAKE_MINOR_VERSION}" VERSION_GREATER 2.6)
  if("${CMAKE_MAJOR_VERSION}.${CMAKE_MINOR_VERSION}.${CMAKE_PATCH_VERSION}" VERSION_GREATER 2.8.3)
    cmake_policy(VERSION 2.8.4)
  else()
    cmake_policy(VERSION 2.6)
  endif()
endif()

add_subdirectory( term)
add_subdirectory( abstract_simplex)
add_subdirectory( chain)
add_subdirectory( chain_complex)
add_subdirectory( finite_field)
add_subdirectory( filtration)
add_subdirectory( tools)
add_subdirectory( product_cell)
add_subdirectory( parallel)
