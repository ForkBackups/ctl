[100%] Building CXX object finite_field/CMakeFiles/tf.dir/test_finite_field.cpp.o
/Users/rhl/code/ctlib/finite_field/test_finite_field.cpp:10:39: error: expected ';' after expression
        std::cout << "a = " << a << " a+a = " a+a << std::endl; 
                                             ^
                                             ;
/Users/rhl/code/ctlib/finite_field/test_finite_field.cpp:10:44: error: invalid operands to binary expression ('Self' (aka 'Finite_field<2>') and '<overloaded function type>')
        std::cout << "a = " << a << " a+a = " a+a << std::endl; 
                                              ~~~ ^  ~~~~~~~~~
/Users/rhl/code/ctlib/finite_field/finite_field.h:103:9: note: candidate template ignored: couldn't infer template argument 'N'
Stream& operator<<( Stream & out, const ctl::Finite_field< N> & x ){ 
        ^
/Users/rhl/code/ctlib/finite_field/finite_field.h:105:9: error: non-const lvalue reference to type 'std::__1::basic_ostream<char>' cannot bind to a temporary of type 'std::__1::basic_ostream<char> *'
        return &out;
               ^~~~
/Users/rhl/code/ctlib/finite_field/test_finite_field.cpp:10:22: note: in instantiation of function template specialization 'operator<<<std::__1::basic_ostream<char>, 2>' requested here
        std::cout << "a = " << a << " a+a = " a+a << std::endl; 
                            ^
In file included from /Users/rhl/code/ctlib/finite_field/test_finite_field.cpp:1:
/Users/rhl/code/ctlib/finite_field/finite_field.h:31:71: error: 'x' is a private member of 'ctl::Finite_field<2>'
int add(const int x, const ctl::Finite_field< N> & rhs){ return x+rhs.x; }
                                                                      ^
/Users/rhl/code/ctlib/finite_field/finite_field.h:58:53: note: in instantiation of function template specialization '<anonymous namespace>::add<2>' requested here
        Self operator+( const T& rhs) const { return Self( add(x, rhs) ); }
                                                           ^
/Users/rhl/code/ctlib/finite_field/test_finite_field.cpp:10:41: note: in instantiation of function template specialization 'ctl::Finite_field<2>::operator+<ctl::Finite_field<2> >' requested here
        std::cout << "a = " << a << " a+a = " a+a << std::endl; 
                                               ^
/Users/rhl/code/ctlib/finite_field/finite_field.h:97:15: note: declared private here
        unsigned int x; 
                     ^
4 errors generated.
make[2]: *** [finite_field/CMakeFiles/tf.dir/test_finite_field.cpp.o] Error 1
make[1]: *** [finite_field/CMakeFiles/tf.dir/all] Error 2
make: *** [all] Error 2
